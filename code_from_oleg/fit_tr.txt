1) Компиляция и запуск программы осуществляются в одну строку (используя командную строку Linux) с помощью bash-скрипта p:

p fit_trajectory.cxx

(оба файла прилагаю к письму)
Вывод сообщений программы перенаправляется в файл с префиксом log_, сообщения об ошибках (и некоторые другие) - в файл с префиксом err_log_.

2) Теперь о самой программе fit_trajectory.cxx. В ней содержится код для аппроксимации резонансных траекторий функцией, предложенной Пакканони, и код для построения сечений одинарной и двойной дифракционной диссоциации. Краткое описание основных функций:

--- Double_t DD_cross(Double_t s, Double_t t, Double_t M2, Double_t* par, Double_t* lambda, Bool_t include_Roper, Double_t norm, Double_t norm_Roper,
                  Int_t include_bg_jenk, Double_t par_jenk[]);

Функция для рассчёта дважды дифференциального сечения одинарной дифракционной диссоциации (d^2\sigma/dtdM^2). В качестве параметров принимает переменные s, t, M^2 (все в ГэВ^2). Кроме того, в качестве параметров функции выступают параметры траектории Пакканони (par, lambda), логическая переменная include_Roper указывает, включать в сечение резонанс Ропера либо нет; переменные norm и norm_Roper задают нормировочные множители для сечения и для слагаемого, отвечающего за резонанс Ропера. Переменные include_bg_jenk и par_jenk отвечают за добавление фонового слагаемого, предложенного Ласло Ласловичем (include_bg_jenk = 0: считать только сечение; include_bg_jenk = -1: считать только фон;  include_bg_jenk = 1: считать сумму фона и сечения).

--- Double_t DD_cross_mod(Double_t s, Double_t t, Double_t M2, Double_t* par, Double_t* lambda, Bool_t include_Roper, Double_t norm, Double_t norm_Roper,
                  Int_t include_bg_jenk, Double_t par_jenk[]);

Функция считает то же сечение, но по упрощённой формуле нового драфта.

--- Double_t DD_cross_bRisto(Double_t s, Double_t t, Double_t M2, Double_t* par, Double_t* lambda, Bool_t include_Roper, Double_t norm, Double_t norm_Roper,
                  Int_t include_bg_jenk, Double_t par_jenk[]);

То же самое, но при этом используется значение наклона b, предложенного Ристо Оравой (указано в функции Double_t Risto_form_factor(Double_t t);)

Для нового драфта следует использовать одну из последних двух функций (вторую??).

--- Double_t dsigma3_dtdM1dM2(Double_t s, Double_t t, Double_t M2_1, Double_t M2_2, Double_t* par, Double_t* lambda, Bool_t include_Roper, Double_t norm, Double_t norm_Roper, Int_t include_bg_jenk, Double_t par_jenk[]);

Функция для рассчёта трижды дифференциального сечения двойной дифракционной диссоциации.

--- Double_t integral_M2_DD_cross(Double_t s, Double_t t, Double_t* par, Double_t* lambda_par,
                              Double_t M2_min, Double_t M2_max, Int_t n_int, Bool_t include_Roper, Int_t bg_parameter,
                              Double_t c_cross, Double_t c_bg, Double_t b, Double_t norm_Roper, Int_t include_bg_jenk,
                              Double_t par_jenk[]);

Сечение одинарной дифракционной диссоциации d\sigma/dt (интеграл от функции  DD_cross по dM^2 в пределах от M2_min do M2_max.



Программа в теперешнем виде считает эти сечения и сохраняет результат в .eps-файлы. Время, нужное для выполнения программы - порядка получаса. 